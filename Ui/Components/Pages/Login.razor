@page "/login"
@inject NavigationManager NavigationManager
@inject AuthenticationService AuthService

<style>
    /* Дополнительные стили при необходимости */
    .login-container {
        max-width: 400px;
        margin: 80px auto;
        padding: 20px;
        border: 1px solid #dee2e6;
        border-radius: 0.25rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        background-color: #fff;
    }

    .error-message {
        color: red;
        margin-top: 10px;
    }

    .bottom-link {
        margin-top: 15px;
        text-align: center;
    }

    .bottom-link a {
        color: #4169e1;
        text-decoration: none;
    }

    .bottom-link a:hover {
        text-decoration: underline;
    }
</style>

<div class="container">
    <div class="login-container">
        <h3 class="mb-4 text-center">Вход</h3>

        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger mb-3" />

            <div class="mb-3">
                <label for="username" class="form-label">Имя пользователя:</label>
                <InputText id="username" class="form-control" @bind-Value="loginModel.UserName" />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Пароль:</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
            </div>
            <button type="submit" class="btn btn-primary w-100">Войти</button>
        </EditForm>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="error-message">@errorMessage</div>
        }

        <div class="bottom-link">
            <span>Нет аккаунта? </span>
            <a href="/register">Зарегистрируйтесь</a>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage = string.Empty;
        
    private async Task HandleLogin()
    {
        var result = await AuthService.Login(loginModel.UserName, loginModel.Password);

        if(result)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = "Неправильное имя пользователя или пароль."; 
        }
    }
}
