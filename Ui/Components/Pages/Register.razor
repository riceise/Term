@page "/register"
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager

<style>
    /* Дополнительные стили при необходимости */
    .register-container {
        max-width: 400px;
        margin: 80px auto;
        padding: 20px;
        border: 1px solid #dee2e6;
        border-radius: 0.25rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        background-color: #fff;
    }

    .error-messages {
        margin-top: 10px;
    }

    .error-messages ul {
        padding-left: 20px;
    }

    .error-messages li {
        color: red;
    }

    .bottom-link {
        margin-top: 15px;
        text-align: center;
    }

    .bottom-link a {
        color: #4169e1;
        text-decoration: none;
    }

    .bottom-link a:hover {
        text-decoration: underline;
    }
</style>

<div class="container">
    <div class="register-container">
        <h3 class="mb-4 text-center">Регистрация</h3>

        @if (errorMessages.Any())
        {
            <div class="error-messages">
                <ul>
                    @foreach (var error in errorMessages)
                    {
                        <li>@error</li>
                    }
                </ul>
            </div>
        }

        <EditForm Model="@registerModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger mb-3" />

            <div class="mb-3">
                <label for="username" class="form-label">Имя пользователя:</label>
                <InputText id="username" class="form-control" @bind-Value="registerModel.UserName" />
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label>
                <InputText id="email" type="email" class="form-control" @bind-Value="registerModel.Email" />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Пароль:</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Зарегистрироваться</button>
        </EditForm>

        <div class="bottom-link">
            <span>Уже есть аккаунт? </span>
            <a href="/login">Войдите</a>
        </div>
    </div>
</div>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private List<string> errorMessages = new List<string>();

    private async Task HandleRegistration()
    {   
        var HttpClient = HttpClientFactory.CreateClient("BackendAPI");
        var response = await HttpClient.PostAsJsonAsync("api/Auth/register", registerModel);

        if(response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            var result = await response.Content.ReadFromJsonAsync<ErrorResponse>();
            errorMessages = result.Errors?.ToList() ?? new List<string>();

            // Если нет подробных ошибок, добавляем общее сообщение
            if (!errorMessages.Any() && !string.IsNullOrEmpty(result.Message))
            {
                errorMessages.Add(result.Message);
            }
        }
    }

    private class ErrorResponse
    {
        public string Status { get; set; }
        public string Message { get; set; }
        public IEnumerable<string> Errors { get; set; }
    }
}
